name: App PlayStore Release
# https://medium.com/codechai/flutter-app-couldnt-find-libflutter-so-c95ad81cbccd
on:
  push:
    branches: [main, mobile]
jobs:
  version:
    name: Create version number
    # needs: [integrationTest]
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: Fetch all history for all tags and branches
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.5
        with:
          versionSpec: "5.5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.5
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  testing:
    name: Unit Testing
    # needs: [integrationTest]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "8.x"
      - uses: subosito/flutter-action@master
        with:
          # flutter-version: '1.22.3'
          channel: "stable"
      # pause test on server for now
      - run: git submodule update --init
      - run: flutter pub get
      - run: ./install.sh
      - run: flutter test
  build:
    name: Build APK and Create release
    needs: [testing, version]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/1.10.28+11173/g' pubspec.yaml
      - name: Update env URL
        run: sed -i 's/#{PUSHER_KEY}#/${{ secrets.PUSHER_KEY }}/g'  .env
      - uses: actions/setup-java@v1
        with:
          java-version: "8.x"
      - uses: subosito/flutter-action@master
        with:
          channel: "master"
      - run: git submodule update --init
      - run: flutter pub get
      # - run: flutter build apk --release --split-per-abi --no-tree-shake-icons
      - run: flutter build appbundle --no-tree-shake-icons
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.GH_TOKEN }}
          tag: 1.10.28+11173
          commit: ${{ github.sha }}
      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab
  release-internal:
    name: Release app to internal track
    needs: [build]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v2
        with:
          name: appbundle
      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: rw.flipper
          releaseFiles: app-release.aab
          # inAppUpdatePriority: 2
          # userFraction: 0.33
          track: internal
          # c: true #set this for the current situation
          whatsNewDirectory: distribution/whatsnew
      # - name: Release app to internal beta
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
      #     packageName: rw.flipper
      #     releaseFiles: app-release.aab
      #     # inAppUpdatePriority: 2
      #     # userFraction: 0.33
      #     track: beta
      #     # c: true #set this for the current situation
      #     whatsNewDirectory: distribution/whatsnew
  slackNotification:
    name: Slack Notification
    needs: [release-internal]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
# https://techcommunity.microsoft.com/t5/windows-dev-appconsult/enable-ci-cd-for-windows-apps-with-github-actions-and-azure/ba-p/1453991
