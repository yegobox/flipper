name: App PlayStore Release

on:
  push:
    branches: [main,aurore,mobile]
jobs:      
  # id of job, a string that is unique to the "jobs" node above.
  drive:
    # Creates a build matrix for your jobs. You can define different
    # variations of an environment to run each job in.
    strategy:
      # A set of different configurations of the virtual environment.
      matrix:
        device:
        - "Nexus 6"
        # - "iPhone 11 Pro Max (13.1)"
      # When set to true, GitHub cancels all in-progress jobs if any matrix job
      # fails.
      fail-fast: false
    # The type of machine to run the job on.
    runs-on: macOS-latest
    # Contains a sequence of tasks.
    steps:
    # A name for your step to display on GitHub.
    - name: "List all simulators"
      run: "xcrun instruments -s"
    - name: "Start Simulator"
      run: |
        UDID=$(
          xcrun instruments -s |
          awk \
            -F ' *[][]' \
            -v 'device=${{ matrix.device }}' \
            '$1 == device { print $2 }'
        )
        xcrun simctl boot "${UDID:?No Simulator with this name found}"
    # The branch or tag ref that triggered the workflow will be checked out.
    # https://github.com/actions/checkout
    - uses: actions/checkout@v1
    # Sets up a flutter environment.
    # https://github.com/marketplace/actions/flutter-action
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # or: 'dev' or 'beta'
    - name: "Run Flutter Driver tests"
      run: "flutter drive --target=test_driver/app.dart"
  version:
    name: Create version number
    needs: [ drive ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Fetch all history for all tags and branches
      run: |
        git config remote.origin.url https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
        git fetch --prune --depth=10
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.5
      with:
          versionSpec: '5.5.x'
    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.5
    - name: Create version.txt with nuGetVersion
      run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
    - name: Upload version.txt
      uses: actions/upload-artifact@v2
      with:
        name: gitversion
        path: version.txt
  testing: 
    name: Unit Testing
    needs: [ drive ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '8.x'
    - uses: subosito/flutter-action@master
      with:
        # flutter-version: '1.22.3'
        channel: 'stable'
    # pause test on server for now
    - run: flutter pub get
    - run: ./install.sh
    - run: flutter test
  build:
    name: Build APK and Create release
    needs: [ testing, version,drive ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Decode google-services.json
      env:
        FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET }}
      run: echo $FIREBASE_SECRET > android/app/google-services.json
    - name: Get version.txt
      uses: actions/download-artifact@v2
      with:
        name: gitversion
    - name: Create new file without newline char from version.txt
      run: tr -d '\n' < version.txt > version1.txt
    - name: Read version
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: version1.txt
    - name: Update version in YAML
      run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
    - name: Update KeyStore password in gradle properties
      run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' android/key.properties
    - name: Update KeyStore key password in gradle properties
      run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' android/key.properties
    - name: Update env URL
      run: sed -i 's/#{PUSHER_KEY}#/${{ secrets.PUSHER_KEY }}/g'  .env
    # - name: Update env PASS
    #   run: sed -i 's/#{PASS}#/${{ secrets.PASS }}/g' .env
    # - name: Update env GMPASS
    #   run: sed -i 's/#{GMPASS}#/${{ secrets.GMPASS }}/g' .env
    - uses: actions/setup-java@v1
      with:
        java-version: '8.x'
    - uses: subosito/flutter-action@master
      with:
        channel: 'master'
   
    - run: flutter pub get
    - run: flutter build apk --release --split-per-abi --no-tree-shake-icons
    - run: flutter build appbundle --no-tree-shake-icons
    - name: Create a Release in GitHub
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
        token: ${{ secrets.GH_TOKEN }}
        tag: ${{ steps.version.outputs.content }}
        commit: ${{ github.sha }}
    - name: Upload app bundle
      uses: actions/upload-artifact@v2
      with:
        name: appbundle
        path: build/app/outputs/bundle/release/app-release.aab      
  release:
    name: Release app to internal track
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get appbundle from artifacts
      uses: actions/download-artifact@v2
      with:
        name: appbundle
    - name: Release app to internal track
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
        packageName: rw.flipper
        releaseFiles: app-release.aab
        # inAppUpdatePriority: 2
        # userFraction: 0.33
        track: internal
        # c: true #set this for the current situation
        whatsNewDirectory: distribution/whatsnew            
 
#  another release and here so!@